% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parent-knn.R
\name{parent_knn}
\alias{parent_knn}
\alias{parent_knn_across_groups}
\title{Find the Nearest Neighbours Among Each Location's Parents}
\usage{
parent_knn(x, n_parents, leaf_size = 40)

parent_knn_across_groups(x, groups, n_parents, leaf_size = 40)
}
\arguments{
\item{x}{A matrix or vector in which each row/element represents a point.}

\item{n_parents}{The number of parent nearest neighbours to find.}

\item{leaf_size}{Leaf size for the KD-tree algorithm used in nearest
neighbour search; the algorithm may run faster for different values.}

\item{groups}{An integer vector representing the group of the each location.}
}
\value{
A matrix where the ith row contains the indices of the parent nearest
neighbours of the ith input point. The first column by convention is equal to
i, so the matrix has \code{n_parents + 1} columns. Some entries can be \code{NA}.
}
\description{
For each row in \code{x}, find the k-nearest neighbours among the earlier
rows. This is needed for the Vecchia approximation in
\code{\link{vecchia_parent_structure}}. The function
\code{parent_knn_across_groups} ensures that parents also come from a different
group.
}
\section{Functions}{
\itemize{
\item \code{parent_knn_across_groups}: Calculate kNN parents such that parents must come
from a different group to the location.
}}

\examples{
x <- matrix(rnorm(100), nrow = 50)
parents <- parent_knn(x, 5)

}
